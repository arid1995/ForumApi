DROP DATABASE forum;
CREATE DATABASE forum;
USE forum;

CREATE TABLE IF NOT EXISTS users (
  userID INT NOT NULL AUTO_INCREMENT,
  username VARCHAR(30),
  about TEXT NOT NULL,
  name VARCHAR(50) NOT NULL,
  email VARCHAR(30) CHARACTER SET ASCII NOT NULL,

  isAnonymous BOOL DEFAULT FALSE,

  PRIMARY KEY (userID),
  UNIQUE (email)
) CHARSET = utf8;

CREATE TABLE IF NOT EXISTS forums (
  forumID INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(200) NOT NULL ,
  short_name VARCHAR(30) CHARACTER SET ASCII NOT NULL,
  userID INT NOT NULL,

  userEmail VARCHAR(30) CHARACTER SET ASCII NOT NULL,

  PRIMARY KEY (forumID),
  UNIQUE (short_name)
) CHARSET = utf8;

CREATE TABLE IF NOT EXISTS threads (
  threadID INT NOT NULL AUTO_INCREMENT,
  forumID INT NOT NULL,
  userID INT NOT NULL,
  title VARCHAR(250) NOT NULL,
  isClosed BOOL NOT NULL DEFAULT FALSE,
  creationDate DATETIME NOT NULL,
  message MEDIUMTEXT NOT NULL,
  slug VARCHAR(50) CHARACTER SET ASCII,

  forumShort_name VARCHAR(30) CHARACTER SET ASCII NOT NULL,
  userEmail VARCHAR(30) CHARACTER SET ASCII NOT NULL,

  isDeleted BOOL DEFAULT FALSE,
  likes INT NOT NULL DEFAULT 0,
  dislikes INT NOT NULL DEFAULT 0,
  points INT NOT NULL DEFAULT 0,
  postCount INT NOT NULL DEFAULT 0,

  PRIMARY KEY (threadID)
) CHARSET = utf8;

CREATE TABLE IF NOT EXISTS posts (
  postID INT NOT NULL AUTO_INCREMENT,
  creationDate DATETIME NOT NULL,
  threadID INT NOT NULL,
  message MEDIUMTEXT NOT NULL,
  userID INT NOT NULL,
  forumID INT NOT NULL,

  forumShort_name VARCHAR(30) CHARACTER SET ASCII NOT NULL,
  userEmail VARCHAR(30) CHARACTER SET ASCII NOT NULL,

  parentPostID INT DEFAULT NULL,
  path VARCHAR(140) CHARACTER SET ASCII NOT NULL DEFAULT '',
  isApproved BOOL DEFAULT FALSE,
  isHighlighted BOOL DEFAULT FALSE,
  isEdited BOOL DEFAULT FALSE,
  isSpam BOOL DEFAULT FALSE,
  isDeleted BOOL DEFAULT FALSE,
  likes INT NOT NULL DEFAULT 0,
  dislikes INT NOT NULL DEFAULT 0,
  points INT NOT NULL DEFAULT 0,

  PRIMARY KEY (postID)
) CHARSET = utf8;

CREATE TABLE IF NOT EXISTS followers (
  followerID INT NOT NULL,
  followeeID INT NOT NULL,
  CONSTRAINT uq_follower_followee UNIQUE (followerID, followeeID),
  CONSTRAINT uq_followee_follower UNIQUE (followeeID, followerID)
);

CREATE TABLE IF NOT EXISTS subscriptions (
  userID INT NOT NULL,
  threadID INT NOT NULL,
  CONSTRAINT uq_subscription UNIQUE (userID, threadID)
);

CREATE TABLE IF NOT EXISTS counters (
  counterName VARCHAR(255) NOT NULL,
  count INT UNSIGNED NOT NULL
) CHARSET = utf8;

DELIMITER //
CREATE TRIGGER postAddTrigger BEFORE INSERT ON posts
FOR EACH ROW
  BEGIN
    DECLARE parentPath VARCHAR(255);

    UPDATE threads
    SET threads.postCount = threads.postCount + 1
    WHERE threads.threadID = new.threadID;
  END;//
DELIMITER ;

DELIMITER //
CREATE TRIGGER postDeleteTrigger AFTER UPDATE ON posts
FOR EACH ROW
  BEGIN
    IF NEW.isDeleted = TRUE AND OLD.isDeleted = FALSE
    THEN
      UPDATE threads SET threads.postCount = threads.postCount - 1
      WHERE threads.threadID = OLD.threadID;
    END IF;

    IF NEW.isDeleted = FALSE AND OLD.isDeleted = TRUE
    THEN
      UPDATE threads SET threads.postCount = threads.postCount + 1
      WHERE threads.threadID = OLD.threadID;
    END IF;

  END; //
DELIMITER ;

USE forum;

#MAIN
CREATE INDEX post_creationDate_threadID ON posts(creationDate, threadID);

CREATE INDEX post_userID ON posts(userID);

CREATE INDEX post_forumID_userID ON posts(forumID, userID);

CREATE INDEX user_name_userID ON users(name, userID);
#Not crucial
CREATE INDEX threads_userID_creationDate ON threads(userID, creationDate);